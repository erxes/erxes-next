name: CI core-api

on:
  push:
    branches:
      - main
    paths:
      - 'backend/core-api/**'
      - 'backend/erxes-api-shared/**'
      - '.github/workflows/ci-api-core-api.yml'
  pull_request:
    paths:
      - 'backend/core-api/**'
      - 'backend/erxes-api-shared/**'
      - '.github/workflows/ci-api-core-api.yml'

jobs:
  core-api-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared module
        run: |
          export NX_DAEMON=false
          pnpm nx build erxes-api-shared --skip-nx-cache=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: github.event_name != 'pull_request'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/core-api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            erxes/erxes-next-core-api:latest
            erxes/erxes-next-core-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
        if: github.event_name != 'pull_request'
