# name: CI Gateway

# on:
#   push:
#     branches: [ main, develop ]
#     paths:
#       - 'backend/gateway/**'
#       - 'backend/erxes-api-shared/**'
#       - '.github/workflows/ci-gateway.yml'
#   pull_request:
#     branches: [ main, develop ]
#     paths:
#       - 'backend/gateway/**'
#       - 'backend/erxes-api-shared/**'
#       - '.github/workflows/ci-gateway.yml'

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '22'
#           cache: 'pnpm'

#       - name: Install pnpm
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8
#           run_install: false

#       - name: Install dependencies
#         run: pnpm install

#       - name: Build gateway
#         run: |
#           cd backend/gateway
#           npx nx build:packageJson gateway
#           npx nx build gateway

#       - name: Run tests
#         run: |
#           cd backend/gateway
#           npx nx test gateway

#   build-and-push-docker:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: ./backend/gateway/Dockerfile
#           push: true
#           tags: |
#             erxes/gateway:latest
#             erxes/gateway:${{ github.sha }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max
