name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/core-ui/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    paths:
      - 'frontend/core-ui/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

permissions:
  actions: read
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Shallow clone for faster checkout

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug # Enable BuildKit debugging
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' # Skip on PR
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: erxes/erxes-next-ui
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha,format=short
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frontend/core-ui/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=pnpm
            type=gha,scope=build
          cache-to: |
            type=gha,scope=pnpm,mode=max
            type=gha,scope=build,mode=max
          build-args: |
            NODE_VERSION=22
            NGINX_VERSION=alpine
          outputs: type=docker,compression-level=9
          provenance: false # Disable provenance for faster builds
          platforms: linux/amd64 # Build for single platform
          build-contexts: |
            deps=target:deps
            builder=target:builder
